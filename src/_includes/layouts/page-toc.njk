---
layout: "layouts/page-base.njk"
---

<div class="columns">
    <div class="column is-8 is-offset-2">                
        <div class="content m-5 has-text-justified" data-pagefind-body>

            <h1 class="title">{{ blocks[block_name].name }}</h1>            

            <hr class="solid">

            <div class="is-hidden-desktop">
                <div class="toc-list">
                    {{ content | toc | safe }}
                </div>
                        
                <hr class="solid">
            </div>
           
           {{ content | safe }}

        </div>
    </div>
    
    <div class="column is-2">
        <aside class="menu menu-stick mt-3 is-hidden-touch">
            <p class="menu-label has-text-success">On this page</p>
            <div class="content is-normal toc-list is-size-7">
                {{ content | toc | safe }}
            </div>
        </aside>
    </div>

</div>

{# <script type="text/javascript">
    const anchors = document.querySelectorAll('h2');
const links = document.querySelectorAll('nav > ul > li > a');

window.addEventListener('scroll', (event) => {
  if (typeof(anchors) != 'undefined' && anchors != null && typeof(links) != 'undefined' && links != null) {
    let scrollTop = window.scrollY;
    
    // highlight the last scrolled-to: set everything inactive first
    links.forEach((link, index) => {
      link.classList.remove("is-active");
    });
    
    // then iterate backwards, on the first match highlight it and break
    for (var i = anchors.length-1; i >= 0; i--) {
      if (scrollTop > anchors[i].offsetTop - 75) {
        links[i].classList.add('is-active');
        break;
      }
    }
  }
});
</script> #}

<script type="text/javascript">
    // For highlight toc menu. Not working now
    window.addEventListener('DOMContentLoaded', () => {

const observer = new IntersectionObserver(entries => {
    entries.forEach(entry => {
        const id = entry.target.getAttribute('id');
        if (entry.intersectionRatio > 0) {
            document.querySelector(`li a[href="#${id}"]`).parentElement.classList.add('is-active');
        } else {
            document.querySelector(`li a[href="#${id}"]`).parentElement.classList.remove('is-active');
        }
    });
});

// Track all sections that have an `id` applied
document.querySelectorAll('section[id]').forEach((section) => {
    observer.observe(section);
});

});
</script>
